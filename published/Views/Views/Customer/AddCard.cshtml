@model Connect2Us.ViewModels.BankCardViewModel

@{
    ViewBag.Title = "Add Bank Card";
}

<div class="container mt-4">
    <div class="row">
        <div class="col-12">
            <h2>@ViewBag.Title</h2>
            <p class="text-muted">Add a new bank card to your wallet</p>
        </div>
    </div>

    <div class="row">
        <div class="col-md-8">
            <div class="card">
                <div class="card-header">
                    <h5>Card Details</h5>
                </div>
                <div class="card-body">
                    @using (Html.BeginForm())
                    {
                        @Html.AntiForgeryToken()
                        @Html.ValidationSummary(true, "", new { @class = "text-danger" })

                        <div class="form-group">
                            @Html.LabelFor(model => model.CardholderName)
                            @Html.EditorFor(model => model.CardholderName, new { htmlAttributes = new { @class = "form-control", placeholder = "John Doe" } })
                            @Html.ValidationMessageFor(model => model.CardholderName, "", new { @class = "text-danger" })
                        </div>

                        <div class="form-group">
                            @Html.LabelFor(model => model.CardNumber)
                            @Html.EditorFor(model => model.CardNumber, new { htmlAttributes = new { @class = "form-control", placeholder = "1234 5678 9012 3456", maxlength = "16" } })
                            @Html.ValidationMessageFor(model => model.CardNumber, "", new { @class = "text-danger" })
                            <small class="form-text text-muted">Card number will be encrypted and stored securely</small>
                        </div>

                        <div class="form-row">
                            <div class="form-group col-md-6">
                                @Html.LabelFor(model => model.ExpiryDate)
                                @Html.EditorFor(model => model.ExpiryDate, new { htmlAttributes = new { @class = "form-control", placeholder = "MM/YY", maxlength = "5" } })
                                @Html.ValidationMessageFor(model => model.ExpiryDate, "", new { @class = "text-danger" })
                            </div>
                            <div class="form-group col-md-6">
                                @Html.LabelFor(model => model.CVV)
                                @Html.EditorFor(model => model.CVV, new { htmlAttributes = new { @class = "form-control", placeholder = "123", maxlength = "3" } })
                                @Html.ValidationMessageFor(model => model.CVV, "", new { @class = "text-danger" })
                                <small class="form-text text-muted">3-digit security code on the back of your card</small>
                            </div>
                        </div>

                        <div class="form-group">
                            <div class="form-check">
                                <input class="form-check-input" type="checkbox" id="termsCheck" required>
                                <label class="form-check-label" for="termsCheck">
                                    I agree to the <a href="#" target="_blank">terms and conditions</a> for storing my card details
                                </label>
                            </div>
                        </div>

                        <div class="form-group">
                            <button type="submit" class="btn btn-primary">
                                <i class="fas fa-save"></i> Add Card
                            </button>
                            <a href="@Url.Action("ManageCards")" class="btn btn-secondary">
                                <i class="fas fa-times"></i> Cancel
                            </a>
                        </div>
                    }
                </div>
            </div>
        </div>

        <div class="col-md-4">
            <div class="card">
                <div class="card-header">
                    <h5>Security Information</h5>
                </div>
                <div class="card-body">
                    <p class="small text-muted">
                        <i class="fas fa-shield-alt text-success"></i> Your card details are encrypted and stored securely
                    </p>
                    <p class="small text-muted">
                        <i class="fas fa-lock text-success"></i> We use industry-standard encryption to protect your data
                    </p>
                    <p class="small text-muted">
                        <i class="fas fa-eye-slash text-success"></i> Your full card number is never displayed, only the last 4 digits
                    </p>
                </div>
            </div>
        </div>
    </div>
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
    <script>
        $(document).ready(function() {
            // Auto-format card number
            $('#CardNumber').on('input', function() {
                let value = $(this).val().replace(/\s/g, '');
                let formattedValue = value.replace(/(\d{4})(?=\d)/g, '$1 ');
                $(this).val(formattedValue);
            });

            // Auto-format expiry date
            $('#ExpiryDate').on('input', function() {
                let value = $(this).val().replace(/\D/g, '');
                if (value.length >= 2) {
                    value = value.substring(0, 2) + '/' + value.substring(2, 4);
                }
                $(this).val(value);
            });

            // Detect card type
            $('#CardNumber').on('input', function() {
                let cardNumber = $(this).val().replace(/\s/g, '');
                let cardType = detectCardType(cardNumber);
                
                // Add card type badge or styling here if needed
                console.log('Card Type: ' + cardType);
            });

            function detectCardType(cardNumber) {
                if (!cardNumber) return 'Unknown';
                
                cardNumber = cardNumber.replace(/\s/g, '');
                
                if (cardNumber.startsWith('4')) return 'Visa';
                if (cardNumber.startsWith('5')) return 'Mastercard';
                if (cardNumber.startsWith('3') && (cardNumber[1] === '4' || cardNumber[1] === '7')) return 'American Express';
                if (cardNumber.startsWith('6')) return 'Discover';
                
                return 'Unknown';
            }
        });
    </script>
}