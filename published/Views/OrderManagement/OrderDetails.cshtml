@model Connect2Us.ViewModels.OrderDetailsViewModel

@{ 
    ViewBag.Title = "Order Details";
}

<h2>Order Details</h2>

<div>
    <h4>Order #@Model.Order.Id</h4>
    <hr />
    <dl class="dl-horizontal">
        <dt>
            @Html.DisplayNameFor(model => model.Order.OrderDate)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.Order.OrderDate)
        </dd>

        <dt>
            Customer
        </dt>

        <dd>
            @Html.DisplayFor(model => model.Order.Customer.User.UserName)
        </dd>
        
        <dt>
            Customer Address
        </dt>

        <dd>
            @Html.DisplayFor(model => model.Order.Customer.Address)
        </dd>
        
        <dt>
            Delivery Address
        </dt>

        <dd>
            @Html.DisplayFor(model => model.Order.DeliveryAddress)
        </dd>

        <dt>
            Total Amount
        </dt>

        <dd>
            @Html.DisplayFor(model => model.Order.TotalAmount)
        </dd>

        <dt>
            @Html.DisplayNameFor(model => model.Order.Status)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.Order.Status)
        </dd>

    </dl>
</div>

<!-- Assign Delivery Driver Section -->
<div class="panel panel-primary">
    <div class="panel-heading">
        <h3 class="panel-title">Assign Delivery Driver</h3>
    </div>
    <div class="panel-body">
        @if (Model.ExistingDelivery != null && !string.IsNullOrEmpty(Model.ExistingDelivery.DeliveryDriverId))
        {
            <div class="alert alert-info">
                <strong>Currently Assigned:</strong> 
                @{
                    var driver = Model.DeliveryDrivers.FirstOrDefault(d => d.UserId == Model.ExistingDelivery.DeliveryDriverId);
                    var driverName = driver != null ? driver.User.FirstName + " " + driver.User.LastName : "Unknown Driver";
                }
                @driverName (Status: @Model.ExistingDelivery.Status)
            </div>
        }
        
        @using (Html.BeginForm("AssignDeliveryDriver", "OrderManagement", FormMethod.Post))
        {
            @Html.AntiForgeryToken()
            @Html.Hidden("orderId", Model.Order.Id)
            
            <div class="form-group">
                <label for="driverId">Select Delivery Driver:</label>
                <select name="driverId" class="form-control">
                    @foreach (var driver in Model.DeliveryDrivers)
                    {
                        <option value="@driver.UserId">@driver.User.FirstName @driver.User.LastName</option>
                    }
                </select>
            </div>
            
            <button type="submit" class="btn btn-primary">Assign Driver</button>
        }
    </div>
</div>

<h3>Order Items</h3>
<table class="table">
    <tr>
        <th>Product</th>
        <th>Quantity</th>
        <th>Price</th>
    </tr>
    @foreach (var item in Model.Order.OrderItems)
    {
        <tr>
            <td>@item.Product.Name</td>
            <td>@item.Quantity</td>
            <td>@item.Price</td>
        </tr>
    }
</table>

@using (Html.BeginForm("UpdateOrderStatus", "OrderManagement", FormMethod.Post))
{
    @Html.AntiForgeryToken()
    @Html.Hidden("orderId", Model.Order.Id)
    <div class="form-group">
        <label for="status">Status</label>
        @Html.TextBox("status", Model.Order.Status, new { @class = "form-control" })
    </div>
    <button type="submit" class="btn btn-primary">Update Status</button>
}

<p>
    @Html.ActionLink("Back to List", "Orders")
</p>